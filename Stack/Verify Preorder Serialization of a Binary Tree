One way to serialize a binary tree is to use pre-order traversal. When we encounter a non-null node, we record the node's value. If it is a null node, we record using a sentinel value such as #.
     _9_
    /   \
   3     2
  / \   / \
 4   1  #  6
/ \ / \   / \
# # # #   # #


For example, the above binary tree can be serialized to the string "9,3,4,#,#,1,#,#,2,#,6,#,#", where # represents a null node. 

class Solution {
public:
    bool isValidSerialization(string preorder) {
        if(preorder.size()==0) return true;
      stack<pair<int,int>> s;
      int i = 0;
      while(i<preorder.size() && preorder[i]!=',') ++i;
      if(preorder[i-1]!='#') s.push(make_pair(i,0));
      ++i;
      while(!s.empty()){
          if(i>=preorder.size()) return false;
          while(i<preorder.size() && preorder[i]!=',') ++i;
          s.top().second++;
          if(s.top().second == 2) s.pop();
          if(preorder[i-1]!='#')
              s.push(make_pair(i,0));
             ++i;
      }
     return i==preorder.size()+1;
    }
};
