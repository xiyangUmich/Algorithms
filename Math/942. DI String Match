Given a string S that only contains "I" (increase) or "D" (decrease), let N = S.length.

Return any permutation A of [0, 1, ..., N] such that for all i = 0, ..., N-1:

If S[i] == "I", then A[i] < A[i+1]
If S[i] == "D", then A[i] > A[i+1]

class Solution:
    def diStringMatch(self, S):
        """
        :type S: str
        :rtype: List[int]
        """
        N=len(S)
        list=[]
        small=0
        big=N
        
        for i in range(0,len(S)):
            if S[i]=="I":
                list.append(small)
                small=small+1
            else:
                list.append(big)
                big=big-1
        list.append(small)
        
        return list
