Write a program to find the nth super ugly number. 

Super ugly numbers are positive numbers whose all prime factors are in the given prime list primes of size k. For example, [1, 2, 4, 7, 8, 13, 14, 16, 19, 26, 28, 32]  is the sequence of the first 12 super ugly numbers given primes = [2, 7, 13, 19] of size 4. 

Note:
 (1) 1 is a super ugly number for any given primes.
 (2) The given numbers in primes are in ascending order.
 (3) 0 < k ≤ 100, 0 < n ≤ 106, 0 < primes[i] < 1000. 

class Solution {
public:
    int nthSuperUglyNumber(int n, vector<int>& primes) {
        vector<int> res;
        vector<int> powInd(primes.size(),0);
        res.push_back(1);
        int num=1;
        
        while(num<n){
            int smallest = INT_MAX;
            int ind = 0;
        for(int i=0;i<primes.size();++i){
            if(primes[i]*res[powInd[i]]==res[res.size()-1]) powInd[i]++;
                smallest = min(primes[i]*res[powInd[i]],smallest);
        }
            res.push_back(smallest);
        num++;
        }
        return res[n-1];
        
    }
};
