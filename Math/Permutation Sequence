The set [1,2,3,â€¦,n] contains a total of n! unique permutations.

By listing and labeling all of the permutations in order,
 We get the following sequence (ie, for n = 3): 
1."123"
2."132"
3."213"
4."231"
5."312"
6."321"


Given n and k, return the kth permutation sequence.

class Solution {
public:
    string getPermutation(int n, int k) {
        string res;
        vector<int> tbl{0,1,2,6,24,120,720,5040,40320,362880};
        if(k>tbl[n]) return res;
        vector<int> num{0,1,2,3,4,5,6,7,8,9};
        int i=0;
        int j=n-1;
        while(i<n){
            int index = (j==0)?1:((k-1)/tbl[j]+1);
            res.push_back('0'+num[index]);
            num.erase(num.begin()+index);
            k=k-(index-1)*tbl[j];
            --j;
            ++i;
        }
        return res;
    }
};
