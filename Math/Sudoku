Determine if a Sudoku is valid
method 1:
class Solution {
public:
    bool isValidSudoku(vector<vector<char>>& board) {
        int checkArr[9]={0};
        int checkCol[9][9]={0};
        int checkSub[9][9]={0};
        for(int i=0;i<9;i++){
            memset(checkArr,0,sizeof(checkArr));    //Set each value in the set equal to para1 from the address para2 with length =para3;
            for(int j=0;j<9;j++){
                if(board[i][j]!='.')
                if(!checkValid(checkArr,board[i][j]-'1') ||     //the index of array from 0
                   !checkValid(checkCol[j],board[i][j]-'1')||
                   !checkValid(checkSub[i/3*3+j/3],board[i][j]-'1'))
                   return false;
            }
            
        }
        return true;
    }
    bool checkValid(int arr[], int index){
        if(arr[index]==1) return false;
        arr[index]=1;
        return true;
    }
};
method2 : (save space)
class Solution {
public:
    bool isValidSudoku(vector<vector<char>>& board) {
        int checkArr[9]={0};
        int checkCol[9]={0};
        int checkSub[9]={0};
        for(int i=0;i<9;i++){
            memset(checkArr,0,sizeof(checkArr));
            memset(checkCol,0,sizeof(checkCol));
            memset(checkSub,0,sizeof(checkSub));
            for(int j=0;j<9;j++){
                if((board[i][j]!='.' && !checkValid(checkArr,board[i][j]-'1')) ||
                   (board[j][i]!='.' && !checkValid(checkCol,board[j][i]-'1'))||
                    (board[i/3*3+j/3][i%3*3+j%3]!='.' &&!checkValid(checkSub,board[i/3*3+j/3][i%3*3+j%3]-'1')))
                   return false;
            }
            
        }
        return true;
    }
    bool checkValid(int arr[], int index){
        if(arr[index]==1) return false;
        arr[index]=1;
        return true;
    }
};
