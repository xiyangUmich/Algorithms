Write an efficient algorithm that searches for a value in an m x n matrix. This matrix has the following properties:


•Integers in each row are sorted in ascending from left to right.
•Integers in each column are sorted in ascending from top to bottom.

class Solution {
public:
    bool searchMatrix(vector<vector<int>>& matrix, int target) {
     int row=matrix.size();
     if(row<=0) return false;
     int col=matrix[0].size();
     int x=0, y=col-1;
     while(x<row && y>=0){
         if(target==matrix[x][y]) return true;
         if(target>matrix[x][y]) ++x;
         else --y;
     }
     return false;
    }
};
