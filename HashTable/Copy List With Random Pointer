A linked list is given such that each node contains an additional random pointer which could point to any node in the list or null. 

Return a deep copy of the list. 

/**
 * Definition for singly-linked list with a random pointer.
 * struct RandomListNode {
 *     int label;
 *     RandomListNode *next, *random;
 *     RandomListNode(int x) : label(x), next(NULL), random(NULL) {}
 * };
 */
class Solution {
    private:
       unordered_map<RandomListNode*, RandomListNode*> map;
public: 
    RandomListNode *copyRandomList(RandomListNode *head) {
        if(!head) return NULL;
        if(map.find(head)!=map.end()) return map[head];
        map[head] = new RandomListNode(head->label);
        map[head]->next = copyRandomList(head->next);
        map[head]->random = copyRandomList(head->random);
    
        return map[head];
        
    }
    
};
