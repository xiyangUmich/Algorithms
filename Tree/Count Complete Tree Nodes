Given a complete binary tree, count the number of nodes.

Definition of a complete binary tree from Wikipedia:
 In a complete binary tree every level, except possibly the last, is completely filled, and all nodes in the last level are as far left as possible. It can have between 1 and 2h nodes inclusive at the last level h.

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    int countNodes(TreeNode* root) {
      if(root==NULL) return 0;
      int count=1;
      int h=0;
      TreeNode* curr = root;
      while(curr->right) {
          ++h;
          count+=pow(2,h);
          curr=curr->right;
    }
    
   
    curr = root;
    TreeNode* left;
    
    while(h>=0){
      left=curr->left;
      for(int i=0;i<h;++i){
          left=left->right;
      }
      if(left!=NULL) {
          count+=pow(2,h);
          curr=curr->right;
      }
      else curr=curr->left;
      --h;
    }
    return count;
    }
    
};
