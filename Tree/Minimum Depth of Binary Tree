Given a binary tree, find its minimum depth.

The minimum depth is the number of nodes along the shortest path from the root node down to the nearest leaf node.

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    int minDepth(TreeNode* root) {
        if(root ==NULL) return 0;
        return minDepthHelp(root, 1);
    }
    int minDepthHelp(TreeNode* root, int i){
      
        if(root->left==NULL && root->right==NULL) return i;
        if(root ->left==NULL) return minDepthHelp(root->right,i+1);
        if(root->right==NULL) return minDepthHelp(root->left,i+1);
        else return min(minDepthHelp(root->left, i+1), minDepthHelp(root->right, i+1));
    }
    int min(int x, int y){
        return (x<y? x:y);
    }
};
