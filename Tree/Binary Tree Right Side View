Given a binary tree, imagine yourself standing on the right side of it, return the values of the nodes you can see ordered from top to bottom.

For example:
 Given the following binary tree,

   1            <---
 /   \
2     3         <---
 \     \
  5     4       <---

class Solution {
private:
    queue<TreeNode*> q;
    stack<TreeNode*> s;
    vector<int> res;
public:
    vector<int> rightSideView(TreeNode* root) {
        if(root==NULL) return res;
        
        q.push(root);
        s.push(root);
        while(q.size()!=0){
            int size=q.size();
            res.push_back(s.top()->val);
          
            for(int i=0;i<size;++i){
                if(q.front()->left!=NULL){
                  q.push(q.front()->left);
                  s.push(q.front()->left);
                } 
                if(q.front()->right!=NULL){
                  q.push(q.front()->right);
                  s.push(q.front()->right);
                }
                q.pop();
            }
        }
        return res;
    }
};
