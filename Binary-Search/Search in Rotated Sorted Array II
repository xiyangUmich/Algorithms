Follow up for "Search in Rotated Sorted Array":
What if duplicates are allowed?

Would this affect the run-time complexity? How and why?

Write a function to determine if a given target is in the array.

class Solution {

public:
    bool search(vector<int>& nums, int target) {
       int i=0;
       int boundary=nums.size()-1;
       while(i<=nums.size()-2){
           if(nums[i+1]>=nums[i]) ++i;
           else{
               boundary=i+1;
               break;
           }
       }
       return (searchHelper(nums, 0, boundary-1, target) || searchHelper(nums, boundary, nums.size()-1, target));
       
    }
    bool searchHelper(vector<int>& nums, int begin, int end, int target){
        while(begin<=end){
        if(begin==end){
            if(nums[begin]==target) return true;
            else return false;
        }
        int mid=(begin+end)/2;
        if(nums[mid]<target) begin=mid+1;
        else if(nums[mid]>target) end=mid-1;
        else return true;
        }
        return false;
    }
    
};
  
