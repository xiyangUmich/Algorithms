Convert a non-negative integer to its english words representation. Given input is guaranteed to be less than 231 - 1. 

For example,

123 -> "One Hundred Twenty Three"
12345 -> "Twelve Thousand Three Hundred Forty Five"
1234567 -> "One Million Two Hundred Thirty Four Thousand Five Hundred Sixty Seven"

class Solution {
public:
    string numberToWords(int num) {
        string res;
        if(num==0) return "Zero";
        int num1=num/pow(10,9);
        //double num2=num;
        if(num1!=0) {
        res = helper(num1)+" "+"Billion";
        num=num%1000000000;
        }
        num1 = num/pow(10,6);
        if(num1!=0) {
        res = res.size()==0?helper(num1)+" "+"Million": res+" "+helper(num1)+" "+"Million";
        num=num%1000000;
        }
        num1 = num/1000;
        if(num1!=0) {
        res = res.size()==0?helper(num1)+" "+"Thousand": res+" "+helper(num1)+" "+"Thousand";
        num=num%1000;
        }
        if(num!=0) 
        res = res.size()==0?helper(num): res+" "+helper(num);
       return res;

        
    }
    string helper(int num){
        vector<string> ones{" ", "One", "Two", "Three", "Four", "Five", "Six", "Seven", "Eight", "Nine"};
        vector<string> teens{"Ten", "Eleven", "Twelve", "Thirteen", "Fourteen","Fifteen", "Sixteen", "Seventeen", "Eighteen", "Nineteen"};
        vector<string> tens{"Ten", "Twenty", "Thirty", "Forty", "Fifty", "Sixty", "Seventy","Eighty", "Ninety"};
        string res;
        if(num>=100){
           res = ones[num/100] + " "+"Hundred";
           num%=100;  
        }
        if(num==0) return res;
        else if(num<10 && num>0) return res.size()==0? ones[num]:res+" "+ones[num];
        else if(num>=10 && num<20) return res.size()==0? teens[num-10]:res+" "+teens[num-10];
        else if(num>19 && num<100){
            int n1 = num/10-1;
            int n2 = num%10;
            string temp = n2==0? tens[n1]:tens[n1]+" "+ones[n2];
            return res.size()==0? temp: res+" " +temp;
        }
    }
};
