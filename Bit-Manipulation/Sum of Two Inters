Calculate the sum of two integers a and b, but you are not allowed to use the operator + and -.

class Solution {
public:
    int getSum(int a, int b) {
        
        if(a>=0 && b<=0){
            if(b==INT_MIN) return getSum(-sub(INT_MAX,a),-1);
           if(abs(a)>abs(b)) return sub(a,-b);
           else return -sub(-b,a);
        }
        if(b>=0 && a<=0){
            if(a==INT_MIN) return getSum(-sub(INT_MAX,b),-1);
            if(abs(b)>abs(a)) return sub(b,-a);
            else return -sub(-a,b);
        }
        if(a>=0 && b>=0){
            return sum(a,b);
        }
        else{
            if(a==INT_MIN) return -sum(-sum(INT_MAX,-b),1);
            if(b==INT_MIN) return -sum(-sum(INT_MAX,-a),1);
            return -sum(-a,-b);
        } 
    }
    int sum(int a, int b){
        int mark = 0;
        int i = 0;
        int res = 0;
        while(a || b){
           int m = a&1;
           int n = b&1; 
           if(m==1 && n ==1 && mark == 1){
               res +=1<<i;
               mark = 1; 
           }
           else if((m==1 && n ==0 && mark == 0) ||(m==0 && n ==1 && mark == 0) ||
           (m==0 && n ==0 && mark == 1)){
              res +=1<<i;
              mark = 0;
           }
            else if((m==1 && n ==1 && mark == 0) ||(m==0 && n ==1 && mark == 1) ||
           (m==1 && n ==0 && mark == 1)){
              
              mark = 1;
           }
         a = a>>1;
	    b = b>>1;
	    ++i;  
        }
        return mark==0?res:res+(1<<i);
    }
    int sub(int a, int b){
       int mark = 0;
       int res = 0;
       int i = 0;
       while(a){
           int m = a&1;
           int n = b&1;
           if(m==1){
               if(n==1 && mark == 1){
                   res +=1<<i;
                   mark = 1;
               }
               else if((n==1 && mark == 0) || (n==0 && mark == 1)){
                   mark = 0;
               }
	      else{
                 res +=1<<i;
                 mark = 0;
	       }
           }
	 else{
	   if(n==1 && mark == 1){
                   mark = 1;
               }
               else if((n==1 && mark == 0) || (n==0 && mark == 1)){
                 res +=1<<i;   
		         mark = 1;
               }
         }
	a = a>>1;
	b = b>>1;
	++i;
       }
	return res;
    }
};
