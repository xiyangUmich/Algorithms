Given an integer array of size n, find all elements that appear more than ⌊ n/3 ⌋ times. The algorithm should run in linear time and in O(1) space.

class Solution {
public:
    vector<int> majorityElement(vector<int>& nums) {
        vector<int> res;
        int n=nums.size();
        int times=n/3;
        sort(nums.begin(),nums.end());
        int i=0;
        
        while(i<n){
            int num=0;
            int curr=nums[i];
            while(i<n && nums[i]==curr){
               ++num;
               if(num==times+1){
                   res.push_back(nums[i]);
               }
               ++i;
            }
        }
        return res;
    }
};
