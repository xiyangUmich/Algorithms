Given an array of n integers nums and a target, find the number of index triplets i, j, k with 0 <= i < j < k < n that satisfy the condition nums[i] + nums[j] + nums[k] < target.


class Solution {
public:
    int threeSumSmaller(vector<int>& nums, int target) {
        if(nums.size()<3) return 0;
        sort(nums.begin(),nums.end());
        int i=0, j=0, k=nums.size()-1;
        int result=0;
        for(;i<nums.size();++i){
            j=i+1;
            k=nums.size()-1;
            while(j<k){
            if(nums[i]+nums[j]+nums[k]<target){
               result+=k-j;
               ++j;
            }
            if(nums[i]+nums[j]+nums[k]>=target){
               --k;
            }
            }
        }
        return result;
    }
};
