Given a string S and a character C, return an array of integers representing the shortest distance from the character C in the string.

class Solution {
public:
    vector<int> shortestToChar(string S, char C) {
        vector<int> leftShortest(S.size(), 0);
        vector<int> rightShortest(S.size(), 0);
        vector<int> result(S.size(), 0);
        int i = 0;
        while(i<S.size()) {
            if(S[i] != C) {
                i++;
                continue;
            }
            i++;
            int d = 1;
            while(i<S.size() && S[i] != C) {
                leftShortest[i] = d;
                i++;
                d++;
            }
        }
        i = S.size()-1;
        while(i >= 0) {
            if(S[i] != C) {
                i--;
                continue;
            }
            i--;
            int d = 1;
            while(i >= 0 && S[i] != C) {
                rightShortest[i] = d;
                i--;
                d++;
            }
        }
        for(int i = 0; i < S.size(); ++i) {
            if(leftShortest[i] == 0 && rightShortest[i] != 0) result[i] = rightShortest[i];
            else if(rightShortest[i] == 0 && leftShortest[i] != 0) result[i] = leftShortest[i];
            else result[i] = min(leftShortest[i], rightShortest[i]);
        }
        return result;
    }
};
