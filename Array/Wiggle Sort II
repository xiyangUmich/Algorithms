Given an unsorted array nums, reorder it such that nums[0] < nums[1] > nums[2] < nums[3]....

Example:
(1) Given nums = [1, 5, 1, 1, 6, 4], one possible answer is [1, 4, 1, 5, 1, 6]. 
(2) Given nums = [1, 3, 2, 2, 3, 1], one possible answer is [2, 3, 1, 3, 1, 2].

class Solution {
public:
    void wiggleSort(vector<int>& nums) {
       for(int i=0;i<nums.size()-1;++i){
           int j = i+1;
           while(j<nums.size() && nums[j]==nums[i]) ++j;
           if((i%2==1 && nums[i]<nums[j]) || (i%2==0 && nums[i]>nums[j]))
            swap(nums[i],nums[j]);
           else if(j-i!=1) swap(nums[i+1],nums[j]);
       }
    }
};

Solution IIclass Solution {
    public:    /**     * @param nums a list of integer     * @return void     */      
    void wiggleSort(vector<int>& nums) {        
    // Write your code here       
        vector<int> n = nums;        
        sort(n.begin(),n.end());        
        int j = 1;        
        for(int i = nums.size()-1;i>=0;--i){            
            if(j%2){                
                nums[j] = n[i];                
                if(j+2<nums.size()) j=j+2;               
                else j = 0;            
             }            
             else{                
                nums[j] = n[i];                
                j = j+2;            
              }
           }
         };
