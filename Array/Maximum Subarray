Find the contiguous subarray within an array (containing at least one number) which has the largest sum. 

For example, given the array [−2,1,−3,4,−1,2,1,−5,4],
 the contiguous subarray [4,−1,2,1] has the largest sum = 6. 

class Solution {
public:
    int maxSubArray(vector<int>& nums) {
      int currSum=0;
      int result=INT_MIN;
      for(auto x:nums){
          currSum=currSum>0? currSum+x:x;
          if(result<currSum) result=currSum;
      }
      return result;
    }
};
