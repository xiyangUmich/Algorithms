Given a non-negative integer, you could swap two digits at most once to get the maximum valued number. Return the maximum valued number you could get.

class Solution {
public:
    int maximumSwap(int num) {
        if(num == 0) return 0;
        int maxDigit = 0;
        int index = 0;
        int candidate = 0;
        int candIndex = 0;
        int tarIndex = 0;
        int tarValue = 0;
        
        int n = num;
        int i = 0;
        int temp = 0;
        while(n) {
            temp = n % 10;
            if(temp > candidate) {
                candidate = temp;
                candIndex = i;
            }
            else if(temp < candidate){
                maxDigit = candidate;
                index = candIndex;
                tarIndex = i;
                tarValue = temp;
            }
            n /= 10;
            i++;
        }
        if(maxDigit == 0) return num;
        int diff = maxDigit - tarValue;
        num = num + diff * pow(10, tarIndex) - diff*pow(10, index);
        return num;
    }
};
