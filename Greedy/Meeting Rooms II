Given an array of meeting time intervals consisting of start and end times [[s1,e1],[s2,e2],...] (si < ei), find the minimum number of conference rooms required.

For example,
Given [[0, 30],[5, 10],[15, 20]],
return 2.

/**
 * Definition for an interval.
 * struct Interval {
 *     int start;
 *     int end;
 *     Interval() : start(0), end(0) {}
 *     Interval(int s, int e) : start(s), end(e) {}
 * };
 */
class Solution {
public: int minMeetingRooms(vector<Interval>& intervals) {
   vector<int> starts;
   vector<int> ends;
   int available=0, rooms=0;
   int i=0;
   for(auto item:intervals){
       starts.push_back(item.start);
       ends.push_back(item.end);
   }
   sort(starts.begin(),starts.end());
   sort(ends.begin(),ends.end());
   for(auto start: starts){
       while(start>=ends[i]){
           ++available;
           ++i;
       }
       available? --available:++rooms;
   }
   return rooms;
}
};
