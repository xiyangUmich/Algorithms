Given an array of integers A, a move consists of choosing any A[i], and incrementing it by 1.

Return the least number of moves to make every value in A unique.

class Solution {

public:
    int minIncrementForUnique(vector<int>& A) {
        if(A.size() == 0) return 0;
        
        int res = 0;
        sort(A.begin(), A.end());
        int i = 1, j = 0;
        int pre = 0, next = 0;
        
        while(i < A.size()) {
            while(i < A.size() && A[i] != A[i-1]) ++i;
            if( i >= A.size()) break;
            if( j < A.size()-1) {
                if( next - pre <= 1 || pre+1 <= A[i]) {
                    j = max(j+1, i);
                    while( j < A.size()-1 && A[j+1] - A[j] <= 1) j++;
                    pre = A[j];
                    next = (j+1) < A.size()? A[j+1]:pre+1;
                }
            }
            res += ++pre - A[i];
            i++;
        }
            
        return res;  
    }
        
};
