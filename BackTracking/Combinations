Given two integers n and k, return all possible combinations of k numbers out of 1 ... n.

For example,
If n = 4 and k = 2, a solution is:

[
  [2,4],
  [3,4],
  [2,3],
  [1,2],
  [1,3],
  [1,4],
]

class Solution {
public:
    vector<vector<int>> combine(int n, int k) {
        vector<vector<int>> res;
        vector<int> path;
        int start=1;
        helper(res,path,start,n,k);
        return res;
    }
    void helper(vector<vector<int>> &res,vector <int> &path, int start, int n,int k){
        if(k==0){
          res.push_back(path);
          
          return;
        }
        for(int i=start;i<=n-k+1;++i){
           path.push_back(i);
           helper(res,path,i+1,n,k-1);
           path.pop_back();
        }
        
    }
};
