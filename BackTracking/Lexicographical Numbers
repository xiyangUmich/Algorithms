Given an integer n, return 1 - n in lexicographical order. 

For example, given 13, return: [1,10,11,12,13,2,3,4,5,6,7,8,9]. 

Please optimize your algorithm to use less time and space. The input size may be as large as 5,000,000. 

class Solution {
public:
    vector<int> lexicalOrder(int n) {
        vector<int> res;
        for(int i = 1;i<=9;++i){
            if(i>n) return res;
            else res.push_back(i);
            helper(res,i,n);
        }
        return res;
    }
    void helper(vector<int>& res, int temp,int n){
        for(int i = 0;i<=9;++i){
            int temp2 = temp*10+i;
            if(temp2>n) return;
            res.push_back(temp2);
            helper(res,temp2,n);
        }
    }
};
