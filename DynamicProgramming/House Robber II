Note: This is an extension of House Robber.

After robbing those houses on that street, the thief has found himself a new place for his thievery so that he will not get too much attention. This time, all houses at this place are arranged in a circle. That means the first house is the neighbor of the last one. Meanwhile, the security system for these houses remain the same as for those in the previous street. 

Given a list of non-negative integers representing the amount of money of each house, determine the maximum amount of money you can rob tonight without alerting the police.

class Solution {
public:
    int rob(vector<int>& nums) {
        if(nums.size()==0) return 0;
        if(nums.size()==1) return nums[0];
      vector<int> numsA(nums.begin(),nums.end()-1);
      vector<int> numsB(nums.begin()+1,nums.end());
      return max(robOri(numsA), robOri(numsB));
    }
    int robOri(vector<int> nums){
        if(nums.size()==0) return 0;
        if(nums.size()==1) return nums[0];
        int a=nums[0], b=max(nums[0],nums[1]), result=b;
        for(int i=2;i<nums.size();++i){
            result=max(a+nums[i],b);
            a=b;
            b=result;
        }
        return result;
    }
};
