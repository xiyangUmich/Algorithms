Given an integer array with all positive numbers and no duplicates, find the number of possible combinations that add up to a positive integer target.

Example: 
nums = [1, 2, 3]
target = 4

The possible combination ways are:
(1, 1, 1, 1)
(1, 1, 2)
(1, 2, 1)
(1, 3)
(2, 1, 1)
(2, 2)
(3, 1)

Note that different sequences are counted as different combinations.

Therefore the output is 7.

class Solution {
public:
    int combinationSum4(vector<int>& nums, int target) {
      
       if(nums.size()==0) return 0;
        sort(nums.begin(),nums.end());
        if(nums[0]>target) return 0;
       vector<int> sums(target+1,0);
       sums[nums[0]]=1;
       for(int i = nums[0]+1;i<=target;++i){
           for(auto x:nums){
            if(x>i) break;
            if(x==i) sums[i]++;
            else sums[i]+=sums[i-x];
           }
       }
     return sums[target];
    }
};
