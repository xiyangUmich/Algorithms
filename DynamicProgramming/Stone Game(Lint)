There is a stone game.At the beginning of the game the player picks n piles of stones in a line.The goal is to merge the stones in one pile observing the following rules: At each step of the game,the player can merge two adjacent piles to a new pile.The score is the number of stones in the new pile. You are to determine the minimum of the total score. 
class Solution {
  public:    /**     * @param A an integer array     * @return an integer     */    
  int stoneGame(vector<int>& A) {        
    // Write your code here        
    if(A.size()==0) return 0;        
    int n = A.size();        
    vector<vector<int>> dp(n, vector<int>(n,0));        
    vector<int> sum(n,0);        
    sum[0] = A[0];        
    dp[0][0] = 0;                
    for(int i = 1;i<n;++i){          
      dp[i][i] = 0;          
      sum[i] = A[i]+sum[i-1];        
     }                 
    for(int d=1;d<n;++d){            
      for(int i = 0;i+d<n;++i){                
        int j = i+d;                
        int minScore = INT_MAX;                
        int temp = sum[j]-(i!=0?sum[i-1]:0);                
        for(int k = i;k<j;++k)                    
        minScore = min(minScore, dp[i][k]+dp[k+1][j]);                
        dp[i][j] = minScore +temp;        
        }        
     }       
     return dp[0][n-1];    
    }
  };
