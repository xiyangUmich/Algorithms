Given a string containing only three types of characters: '(', ')' and '*', write a function to check whether this string is valid. We define the validity of a string by these rules:

class Solution {
public:
    bool checkValidString(string s) {
        if(s.size() == 0) return true;
        int n = s.size();
        vector<vector<bool>> valid(n, vector<bool>(n, false));
        
        for(int i = 0; i < n-1; ++i) {
            if((s[i] == '(' || s[i] == '*') &&
               (s[i+1] == ')' || s[i+1] == '*')) valid[i][i+1] = true;
            if(s[i] == '*') valid[i][i] = true;   
        }
        if(s[n-1] == '*') valid[n-1][n-1] = true;
               
        for(int d = 2; d < n; ++d) {
            for(int i = 0; i + d < n; ++i) {
                if(s[i] == '(' || s[i] == '*') {
                   for(int k = i+1; k <= i+d; ++k) {
                       if(s[k] == ')' || s[k] == '*') {
                           if(k == i+1) {
                               if(valid[i+2][i+d]) {
                                   valid[i][i+d] = true;
                                   break;
                               }
                           }
                           else if(k == i+d) {
                               if(valid[i+1][i+d-1]) {
                                   valid[i][i+d] = true;
                                   break;
                               }
                           }
                           else if(valid[i+1][k-1] && valid[k+1][i+d]) {
                               valid[i][i+d] = true;
                               break;
                           }    
                       }
                   }
                }
                else if(s[i] == '*') {
                    if(valid[i+1][i+d]) valid[i][i+d] = true;
                }
            }
        }
               return valid[0][n-1];
    }
//Find method II in Stack segment (O(n))
