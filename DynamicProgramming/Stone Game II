A Circle: (n to 2n)
class Solution {
  public:    /**     * @param A an integer array     * @return an integer     */    int stoneGame2(vector<int>& A) {        
  // Write your code here        
    int n = A.size();        
    if(n==0) return 0;        
    vector<int> sum(2*n,0);        
    vector<vector<int>> dp(2*n,vector<int>(2*n,0));                
    sum[0] = A[0];        
    for(int i =1;i<2*n;++i) sum[i] = sum[i-1] + A[i%n];                
    for(int d = 1;d<n;++d){            
      for(int i = 0;i+d<2*n;++i){                
      int j = i+d;                
      int minScore = INT_MAX;                
      for(int k =i;k<j;++k)                    
        minScore = min(minScore, dp[i][k]+dp[k+1][j]);                
        int s = sum[j] - (i==0?0:sum[i-1]);                
        dp[i][j] = s+minScore;            
       }        
      }        
      int res = INT_MAX;        
      for(int i = 0;i+n-1<2*n;++i) res = min(res,dp[i][i+n-1]);        
      return res;        //return dp[0][n-1];    
     }
    };
