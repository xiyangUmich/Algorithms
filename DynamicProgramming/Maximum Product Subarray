Find the contiguous subarray within an array (containing at least one number) which has the largest product.
For example, given the array [2,3,-2,4],
the contiguous subarray [2,3] has the largest product = 6.

class Solution {
public:
    int maxProduct(vector<int>& nums) {
        if(nums.size()<1) return 0;
        int res=nums[0];
        int currMax=nums[0];
        int currMin=nums[0];
        int preMax=currMax;
        int preMin=currMin;
        for(int i=1;i<nums.size();++i){
            preMax=currMax;
            preMin=currMin;
            currMax=max(preMax*nums[i], max(preMin*nums[i], nums[i]));
            currMin=min(preMax*nums[i], min(preMin*nums[i], nums[i]));
            res=max(res, currMax);
        }
        return res;
    }
};
