Follow up for "Unique Paths":

Now consider if some obstacles are added to the grids. How many unique paths would there be?

An obstacle and empty space is marked as 1 and 0 respectively in the grid.

For example,
There is one obstacle in the middle of a 3x3 grid as illustrated below.

[
  [0,0,0],
  [0,1,0],
  [0,0,0]
]
The total number of unique paths is 2.

class Solution {
public:
    int uniquePathsWithObstacles(vector<vector<int>>& obstacleGrid) {
        int m=obstacleGrid.size();
        int n=obstacleGrid[0].size();
        vector<vector<int>> res(m, vector<int>(n,0));   //To initialize a vector with 2D
        for(int i=0;i<m;++i) if(obstacleGrid[i][0]==0) res[i][0]=1; else break;
        for(int j=0;j<n;++j) if(obstacleGrid[0][j]==0) res[0][j]=1; else break;
        for(int i=1;i<m;++i)
            for(int j=1;j<n;++j){
                if(obstacleGrid[i][j]==1) res[i][j]=0;
                else res[i][j]=res[i-1][j]+res[i][j-1];
            }
        return res[m-1][n-1];    
    }
};
