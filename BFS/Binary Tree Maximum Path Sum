Given a binary tree, find the maximum path sum. 

For this problem, a path is defined as any sequence of nodes from some starting node to any node in the tree along the parent-child connections. The path does not need to go through the root.

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    int maxPathSum(TreeNode* root) {
        int maxSum = INT_MIN;
        helper(root,maxSum);
        return maxSum;
    }
    int helper(TreeNode* root, int &maxSum){
        if(root==NULL) return 0;
        int l = helper(root->left, maxSum);
        int r = helper(root->right, maxSum);
        maxSum = max(maxSum, root->val+l+r);
        return max(0,root->val+max(0,max(l,r)));
    }
};
