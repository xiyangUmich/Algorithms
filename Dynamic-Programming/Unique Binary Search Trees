Given n, how many structurally unique BST's (binary search trees) that store values 1...n?

For example,
 Given n = 3, there are a total of 5 unique BST's. 
   1         3     3      2      1
    \       /     /      / \      \
     3     2     1      1   3      2
    /     /       \                 \
   2     1         2                 3

class Solution {
public:
    int numTrees(int n) {
        if(n==0) return 1;
       if(n==1) return 1;
       if(n==2) return 2;
       int result=0;
       int i=0;
       while(i<n/2){
           result+=numTrees(i)*numTrees(n-1-i);
           ++i;
       }
       if(n%2==0) result*=2;
       else result=result*2+numTrees((n-1)/2)*numTrees((n-1)/2);
       return result;
    }
};
