Given a sorted linked list, delete all nodes that have duplicate numbers, leaving only distinct numbers from the original list.

For example,
Given 1->2->3->3->4->4->5, return 1->2->5.
Given 1->1->1->2->3, return 2->3.

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* deleteDuplicates(ListNode* head) {
        ListNode* pre=new ListNode(0);
        ListNode* newHead=pre;
        int temp;
        
        while(head && head->next){
            if(head->val!=head->next->val){
                pre->next=head;
                pre=pre->next;
                head=head->next;
            }
            else{
                temp=head->val;
                while(head && head->val==temp)
                    head=head->next;
            }
        }
        pre->next=head;
        return newHead->next;
    }
};
