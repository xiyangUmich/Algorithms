/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *getIntersectionNode(ListNode *headA, ListNode *headB) {
        ListNode* temp1=headA;
        ListNode* temp2=headB;
        int n1=0;
        int n2=0;
        while(temp1!=nullptr) {
            n1++;
            temp1=temp1->next;
        }
        while(temp2!=nullptr) {
            n2++;
            temp2=temp2->next;
        }
        if(n2==0||n1==0) return nullptr;
        int d=abs(n1-n2);
        
        temp1=headA;
        temp2=headB;
        int i1=1;
        int i2=1;
        if(n1>n2){
            while(i1++<=d)
            temp1=temp1->next;
        }
        else if(n1<n2){
            while(i2++<=d)
            temp2=temp2->next;
        }
        while(temp1!=nullptr&&temp1->val!=temp2->val){
            temp1=temp1->next;
            temp2=temp2->next;
        }
        
        return temp1;
        
    }
};
